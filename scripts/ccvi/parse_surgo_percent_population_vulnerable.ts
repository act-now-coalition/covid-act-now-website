/**
 * A one-time script to parse surgo_population_percentage.csv
 * (generated by manually copying the data from https://www.precisionforcoviddata.org)
 *
 * Percent population vulnerable represents the percentage of the state population residing in areas classified as having 'high' or 'very high' vulnerability
 *
 * 50 states + District of Columbia only
 *
 * Results in surgo-percent-population-vulnerable.json with a format of [fips]: populationPercent[number]
 */

import fs from 'fs';
import path from 'path';
import { toNumber } from 'lodash';
import { FipsToPopVulnerable } from '../../src/common/data';
const promisify = require('util').promisify;
const csvParse = promisify(require('csv-parse'));

const outputPath = path.join(
  __dirname,
  '../../src/common/data/surgo-percent-population-vulnerable.json',
);

async function readCsv(filePath: string) {
  const csvText = fs.readFileSync(path.join(__dirname, filePath));
  return csvParse(csvText, { columns: true });
}

async function main() {
  const fipsToPopulationVulnerable: FipsToPopVulnerable = {};

  const rows = await readCsv('surgo_population_percentage.csv');
  console.log('rows', rows);

  for (const row of rows) {
    console.log('row.fips', row.fips);
    console.log('row.vuln_percentage', row.vuln_percentage);
    fipsToPopulationVulnerable[row.fips] = toNumber(row.vuln_percentage);
  }

  fs.writeFileSync(
    outputPath,
    JSON.stringify(fipsToPopulationVulnerable, null, 2),
  );
}

if (require.main === module) {
  main();
}
